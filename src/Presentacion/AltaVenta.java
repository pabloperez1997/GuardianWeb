/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.cliente;
import Logica.detalleVenta;
import Logica.fabricaElGuardian;
import Logica.iControladorCliente;
import Logica.iControladorVentas;
import Logica.producto;
import Logica.venta;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabri
 */
public class AltaVenta extends javax.swing.JInternalFrame {

    iControladorVentas ICV;
    iControladorCliente ICC;
    /**
     * Creates new form AltaVenta
     */
    int altura = 100;
    int panel = 2;
    List<producto> listaproductos;
    List<detalleVenta> listaventa = new ArrayList<>();
    float PrecioTotal = 0;

    public AltaVenta() {
        initComponents();
        this.ICV = fabricaElGuardian.getInstance().getInstanceIControladorVentas();
        this.ICC = fabricaElGuardian.getInstance().getInstanceIControladorCliente();

        listaproductos = (List<producto>) ICV.obtenerProductos();
        DefaultTableModel modelo = (DefaultTableModel) TablaProductos.getModel();

        modelo.setRowCount(0);

        for (int i = 0; i < listaproductos.size(); i++) {

            producto pro = (producto) listaproductos.get(i);
            Object[] datos = {pro.getCodigo(), pro.getNombre(), pro.getPrecio(), pro.getCantidad()};

            modelo.addRow(datos);
        }
        
         cargarComboClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Clientes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tablaventa = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaProductos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        agregarproducto = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Preciototal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nueva Venta");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Productos");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Lista de venta");

        Clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(232, 232, 232))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(529, 529, 529)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(Clientes, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(Clientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)))
        );

        Tablaventa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tablaventa);

        TablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Precio", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablaProductos);

        jButton1.setText("Finalizar Venta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        agregarproducto.setText("Agregar producto");
        agregarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarproductoActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Quitar Producto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Total:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(agregarproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(Preciototal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {agregarproducto, jButton2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Preciototal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {agregarproducto, jButton2});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarproductoActionPerformed
       
        int a = TablaProductos.getSelectedRow();
        if (a == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto");
            return;
        }
        producto produ = ICV.ObtenerProducto((Long) TablaProductos.getValueAt(TablaProductos.getSelectedRow(), 0));
        detalleVenta dv = new detalleVenta();      
        dv.setProducto(produ);
        
        DefaultTableModel modelo = (DefaultTableModel) Tablaventa.getModel();
        modelo.setRowCount(0);
       
        boolean existe=false;
        for (int x = 0; x < listaventa.size(); x++) {           
            detalleVenta detv = (detalleVenta) listaventa.get(x);
            producto pro = detv.getProducto();
            
            if(produ.getCodigo()==pro.getCodigo()){
                if(pro.getCantidad()>detv.getCantidad()){ 
                 detv.setCantidad(detv.getCantidad()+1);
                  }
                 existe=true;
            }
               
        
        }
        
        if(!existe)
        this.listaventa.add(dv);
        
        PrecioTotal= 0;
         for (int x = 0; x < listaventa.size(); x++) {           
            detalleVenta detv = (detalleVenta) listaventa.get(x);
            producto pro = detv.getProducto();
            
             PrecioTotal = PrecioTotal+detv.getCantidad()*detv.getProducto().getPrecio();
            Object[] datos = {pro.getCodigo(), pro.getNombre(), pro.getPrecio(), detv.getCantidad()};
            modelo.addRow(datos);
            
        }
        

      this.Preciototal.setText("" + PrecioTotal);
    }//GEN-LAST:event_agregarproductoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        for (int x = listaventa.size() - 1; x >= 0; x--) {
            producto produ = (producto) listaventa.get(x).getProducto();
         //   produ.setCantidad(1);
            listaventa.remove(produ);
        }
         for (int x = listaproductos.size() - 1; x >= 0; x--) {
            producto produ = (producto) listaproductos.get(x);
         //   produ.setCantidad(1);
            listaventa.remove(produ);
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (listaventa.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe agregar productos a la venta");
            return;
        }
        
        String correo=Clientes.getSelectedItem().toString();
        if(correo.equals("Seleccionar Cliente"))
        {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un cliente");
            return;
        }
        
    
      
        
      cliente c= ICC.getCliente(correo);
      
       boolean funciono=ICV.AltaVenta(listaventa,c);
      
        if (funciono) {
            
            //ICV.finalizarVenta(c);
            JOptionPane.showMessageDialog(null, "Venta realizada");
        } else {
            JOptionPane.showMessageDialog(null, "Error al realizar la venta");
        }
        DefaultTableModel modelo = (DefaultTableModel) Tablaventa.getModel();
        modelo.setRowCount(0);
        for (int x = listaventa.size() - 1; x >= 0; x--) {
            detalleVenta dv = (detalleVenta) listaventa.get(x);
            listaventa.remove(dv);
        }
         this.Preciototal.setText(""+0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int a = Tablaventa.getSelectedRow();
        if (a == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto");
            return;
        }
    
        
        boolean existe=false;
       
        Long cod= (Long) Tablaventa.getValueAt(Tablaventa.getSelectedRow(), 0);
        producto p = ICV.ObtenerProducto(cod);
        for (int i = 0; i < listaventa.size(); i++) {
            detalleVenta detv = (detalleVenta) listaventa.get(i);
            if (detv.getProducto().getCodigo() == p.getCodigo()) {
                if(detv.getCantidad()>1){
                    detv.setCantidad(detv.getCantidad()-1);
                     existe=true;
                    }
                
            }
        }
        if(!existe){
            for (int i = 0; i < listaventa.size(); i++) {
                detalleVenta detv = (detalleVenta) listaventa.get(i);
                if (detv.getProducto().getCodigo() == p.getCodigo()) 
                this.listaventa.remove(detv);
            
        }
        }
            
            
       
        DefaultTableModel modelo = (DefaultTableModel) Tablaventa.getModel();
        modelo.setRowCount(0);
        PrecioTotal = 0;
        for (int x = 0; x < listaventa.size(); x++) {
            detalleVenta detv = (detalleVenta) listaventa.get(x);
            producto pro = detv.getProducto(); 
            PrecioTotal = PrecioTotal+detv.getCantidad()*detv.getProducto().getPrecio();
            
            Object[] datos = {pro.getCodigo(), pro.getNombre(), pro.getPrecio(), detv.getCantidad()};
            modelo.addRow(datos);
        }
        this.Preciototal.setText("" + PrecioTotal);
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientesActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Clientes;
    private javax.swing.JTextField Preciototal;
    private javax.swing.JTable TablaProductos;
    private javax.swing.JTable Tablaventa;
    private javax.swing.JButton agregarproducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void cargarComboClientes() {
List<cliente> clientes=this.ICC.getClientes();
        Iterator it = clientes.iterator();

        Clientes.addItem("Seleccionar Cliente");

        while (it.hasNext()) {
            cliente c = (cliente) it.next();
            Clientes.addItem(c.getCorreo());
        }    }
}
